<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 04b11e621f6ccf857368d90262f051a8d40c865d Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->


<refentry xml:id="function.mysqlnd-qc-get-cache-info" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mysqlnd_qc_get_cache_info</refname>
  <refpurpose>Retourne des informations sur le gestionnaire courant</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type>
   <methodname>mysqlnd_qc_get_cache_info</methodname>
   <void />
  </methodsynopsis>
  <para>
   
  </para>
  
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne des informations sur le gestionnaire courant, le nombre
   d'entrées du cache ainsi que les entrées du cache, si disponible.
   Les données retournées depuis les entrées du cache dépendent du
   gestionnaire de stockage actif. Le gestionnaire de stockage
   est libre de retourner n'importe quelle donnée. Les gestionnaires
   de stockage sont invités à retourner au moins les données fournies
   par le gestionnaire par défaut, si c'est techniquement possible.
  </para>
  <para>
   Le scope de l'information est le processus PHP. Suivant le modèle
   de déploiement PHP, un processus peut servir une ou plusieurs
   requêtes web.
  </para>
  <para>
   Les valeurs sont aggrégées pour toutes les activités du cach par gestionnaire
   de stockage. Il n'est pas possible de dire le nombre de requêtes provenant
   de <literal>mysqli</literal>, <literal>PDO_MySQL</literal> ou <literal>mysql</literal>.
   Les appels API ont contribués aux valeurs des données aggrégées. Utilisez
   la fonction <function>mysqlnd_qc_get_core_stats</function>
   pour récupérer les données aggrégées pour tous les gestionnaires de stockage.
  </para>
  <para>
   Tableau des informations du cache
  </para>
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>handler</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Le gestionnaire de stockage actif.
      </para>
      <para>
       Tout gestionnaire de stockage. Depuis 1.0.0.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>handler_version</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       La version du gestionnaire de stockage actif.
      </para>
      <para>
       Tout gestionnaire de stockage. Depuis 1.0.0.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>num_entries</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Le nombre d'entrées dans le cache. La valeur dépend du gestionnaire
       de stockage utilisé.
      </para>
      <para>
       Par défaut, les gestionnaires de stockage APC et SQLite fournissent
       le nombre actuel d'entrées dans le cache.
      </para>
      <para>
       Le gestionnaire de stockage MEMCACHE retourne toujours <literal>0</literal>.
       MEMCACHE ne suppose pas le comptage du nombre d'entrées dans le cache.
      </para>
      <para>
       Si un gestionnaire de stockage défini par l'utilisateur est utilisé,
       le nombre d'entrées de la propriété <literal>data</literal> sera retourné.
      </para>
      <para>
       Depuis 1.0.0.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>data</parameter>
      <type>array</type>
     </term>
     <listitem>
      <para>
       La version du gestionnaire de stockage actif.
      </para>
      <para>
       Certains gestionnaires de stockage dépendant des données
       contenues dans les entrées du cache. Le gestionnaire de
       stockage est sollicité pour fournir des informations similaires
       et comparables. Un gestionnaire de stockage défini par l'utilisateur
       est libre de retourner n'importe quelle donnée.
      </para>
      <para>
       Depuis 1.0.0.
      </para>
      <para>
       Les informations suivantes sont fournies par le gestionnaire
       de stockage par défaut pour la propriété <literal>data</literal>.
      </para>
      <para>
       La proriété <literal>data</literal> contient un hachage.
       Ce hachage est indexé par l'identifiant de l'entrée du cache interne
       du gestionnaire de stockage. L'identifiant de l'entrée du cache
       est humainement lisible et contient la chaîne de requête correspondante
       à l'entrée du cache. Reportez-vous à l'exemple ci-dessous. Les données
       suivantes sont fournies pour chaque entrée du cache.
      </para>
      <para>
       <variablelist>
        <varlistentry>
         <term>
          <parameter>statistics</parameter>
          <type>array</type>
         </term>
         <listitem>
          <para>
           Statistiques de l'entrée du cache.
          </para>
          <para>
           Depuis 1.0.0.
          </para>
          <informaltable>
           <tgroup cols="3">
            <colspec colwidth="1*"/>
            <colspec colwidth="7*"/>
            <colspec colwidth="2*"/>
            <thead>
             <row>
              <entry>Propriété</entry>
              <entry>Description</entry>
              <entry>Version</entry>
             </row>
            </thead>
            <tbody>
             <row>
              <entry>
               <literal>rows</literal>
              </entry>
              <entry>
               Nombre de lignes contenues dans le jeu de résultats mis en cache.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
             <row>
              <entry>
               <literal>stored_size</literal>
              </entry>
              <entry>
               La taille du jeu de résultats mis en cache, en octets.
               C'est la taille occupée en charge. Cette valeur n'est pas
               pertinante pour calculer le nombre total de mémoires
               consommées par toutes les entrées du cache, incluant
               les données administratives des entrées de cache.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
             <row>
              <entry>
               <literal>cache_hits</literal>
              </entry>
              <entry>
               Le nombre de fois que l'entrée du cache a été servie.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
             <row>
              <entry>
               <literal>run_time</literal>
              </entry>
              <entry>
               Durée d'exécution de la requête pour cette entrée du cache.
               C'est la durée d'exécution de la requête non mise en cache.
               C'est le temps entre l'envoi de la requête MySQL et la réponse
               de MySQL. Le temps gagné en utilisant le plugin de mise en
               cache de requêtes peut être calculé ainsi :
               <literal>cache_hits * ((run_time - avg_run_time) + (store_time - avg_store_time))</literal>.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
             <row>
              <entry>
               <literal>store_time</literal>
              </entry>
              <entry>
               Durée de stockage du jeu de résultats des requêtes appartenant à
               l'entrée du cache. C'est la durée de récupération et de stockage
               des résultats de requêtes non mises en cache.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
             <row>
              <entry>
               <literal>min_run_time</literal>
              </entry>
              <entry>
               Temps minimal d'exécution des requêtes mises en cache.
               C'est le temps de recherche de la requête dans le cache.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
             <row>
              <entry>
               <literal>min_store_time</literal>
              </entry>
              <entry>
               Temps minimal de stockage des requêtes mises en cache.
               Le temps prit pour récupérer le jeu de résultats du cache
               depuis le médium de stockage et de le décoder.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
             <row>
              <entry>
               <literal>avg_run_time</literal>
              </entry>
              <entry>
               Temps d'exécution moyen de la requête mise en cache.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
             <row>
              <entry>
               <literal>avg_store_time</literal>
              </entry>
              <entry>
               Temps de stockage moyen de la requête mise en cache.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
             <row>
              <entry>
               <literal>max_run_time</literal>
              </entry>
              <entry>
               Temps d'exécution moyen de la requête mise en cache.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
             <row>
              <entry>
               <literal>max_store_time</literal>
              </entry>
              <entry>
               Temps de stockage moyen de la requête mise en cache.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
             <row>
              <entry>
               <literal>valid_until</literal>
              </entry>
              <entry>
               Timestamp lorsque l'entrée du cache expire.
              </entry>
              <entry>Depuis 1.1.0.</entry>
             </row>
            </tbody>
           </tgroup>
          </informaltable>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <parameter>metadata</parameter>
          <type>array</type>
         </term>
         <listitem>
          <para>
           Les méta-données de l'entrée du cache.
           Ce sont les méta-données fournies par MySQL en plus du jeu
           de résultats de la requête en question. Des versions différentes
           du serveur MySQL peuvent retourner des méta-données différentes.
           Contrairement à d'autres extensions PHP MySQL, aucune tentative
           n'est effectuée pour cacher à l'appelant des informations quant
           à la version du serveur MySQL ainsi qu'à ces détails.
           Reportez-vous à la documentation de l'API C MySQL appartenant
           au serveur MySQL utilisé pour plus de détails.
          </para>
          <para>
           La liste des méta-données contient une entrée pour chaque colonne.
          </para>
          <para>
           Depuis 1.0.0.
          </para>
          <informaltable>
           <tgroup cols="3">
            <colspec colwidth="1*"/>
            <colspec colwidth="7*"/>
            <colspec colwidth="2*"/>
            <thead>
             <row>
              <entry>Propriété</entry>
              <entry>Description</entry>
              <entry>Version</entry>
             </row>
            </thead>
            <tbody>
             <row>
              <entry>
               <literal>name</literal>
              </entry>
              <entry>
               LLe nom du champ. Suivant la version MySQL, ce peut
               être l'alias du nom du champ.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
             <row>
              <entry>
               <literal>org_name</literal>
              </entry>
              <entry>
               Le nom du champ.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
             <row>
              <entry>
               <literal>table</literal>
              </entry>
              <entry>
               Le nom de la table. Si un alias du nom est utilisé pour la table,
               ce champ contiendra le nom de l'alias.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
             <row>
              <entry>
               <literal>org_table</literal>
              </entry>
              <entry>
               Le nom de la table.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
             <row>
              <entry>
               <literal>db</literal>
              </entry>
              <entry>
               Le nom de la base de données/du shéma.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
             <row>
              <entry>
               <literal>max_length</literal>
              </entry>
              <entry>
               La taille maximale du champ. Les détails peuvent
               varier suivant les versions du serveur MySQL.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
             <row>
              <entry>
               <literal>length</literal>
              </entry>
              <entry>
               La taille du champ. Les détails peuvent varier suivant les versions
               du serveur MySQL.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
             <row>
              <entry>
               <literal>type</literal>
              </entry>
              <entry>
               Le type de données du champ. Les détails peuvent varier suivant les
               versions du serveur MySQL utilisé. C'est la valeur de la constante
               type de l'API C MySQL. Il est recommandé d'utiliser les variables type
               fournies par l'extension <literal>mysqli</literal> aux fins de test
               pour en connaitre la signification. Vous ne devriez pas tester les
               valeurs de certain type en les comparant avec certains nombres.
              </entry>
              <entry>Depuis 1.0.0.</entry>
             </row>
            </tbody>
           </tgroup>
          </informaltable>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
      <para>
       Le gestionnaire de stockage APC retourne la même information
       pour la propriété <literal>data</literal> mais pas pour la
       propriété <literal>metadata</literal>.
       Les <literal>metadata</literal> d'une entrée du cache est défini à
       <literal>NULL</literal>.
      </para>
      <para>
       Le gestionnaire de stockage MEMCACHE ne renseigne pas la propriété
       <literal>data</literal>. Les statistiques ne sont pas disponibles
       pour chaque entrée du cache avec ce gestionnaire de stockage.
      </para>
      <para>
       Un gestionnaire de stockage défini par l'utilisateur est libre
       de fournir toute sorte de données.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>mysqlnd_qc_get_cache_info</function></title>
   <para>
    L'exemple ci-dessous montre l'affiche depuis le gestionnaire
    de stockage interne par défaut. Les autres gestionnaires
    de stockage peuvent retourner des données différentes.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
/* Peuple le cache, i.e. en utilisant mysqli */
$mysqli = new mysqli("host", "user", "password", "schema");
$mysqli->query("/*" . MYSQLND_QC_ENABLE_SWITCH . "*/SELECT id FROM test");

/* Affiche les informations du cache */
var_dump(mysqlnd_qc_get_cache_info());
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
array(4) {
 ["num_entries"]=>
 int(1)
 ["handler"]=>
 string(7) "default"
 ["handler_version"]=>
 string(5) "1.0.0"
 ["data"]=>
 array(1) {
   ["Localhost via UNIX socket 3306 user schema|/*qc=on*/SELECT id FROM test"]=>
   array(2) {
     ["statistics"]=>
     array(11) {
       ["rows"]=>
       int(6)
       ["stored_size"]=>
       int(101)
       ["cache_hits"]=>
       int(0)
       ["run_time"]=>
       int(471)
       ["store_time"]=>
       int(27)
       ["min_run_time"]=>
       int(0)
       ["max_run_time"]=>
       int(0)
       ["min_store_time"]=>
       int(0)
       ["max_store_time"]=>
       int(0)
       ["avg_run_time"]=>
       int(0)
       ["avg_store_time"]=>
       int(0)
     }
     ["metadata"]=>
     array(1) {
       [0]=>
       array(8) {
         ["name"]=>
         string(2) "id"
         ["orig_name"]=>
         string(2) "id"
         ["table"]=>
         string(4) "test"
         ["orig_table"]=>
         string(4) "test"
         ["db"]=>
         string(4) "schema"
         ["max_length"]=>
         int(1)
         ["length"]=>
         int(11)
         ["type"]=>
         int(3)
       }
     }
   }
 }
}

]]>
   </screen>
   
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <function>mysqlnd_qc_get_core_stats</function>
    </member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
